# Generated by Django 3.1 on 2020-11-17 07:58
from decimal import Decimal

import django
from django.db import migrations, models


def assign_price_to_order(apps, schema_editor):
    Order = apps.get_model("payments", "Order")
    BerthProduct = apps.get_model("payments", "BerthProduct")

    # Filter orders with BerthProducts without price
    for order in Order.objects.filter(price__isnull=True):
        if type(order.product) == BerthProduct:
            order.price = order.product.price_value
            order.tax_percentage = order.product.tax_percentage
            order.product = None
            order.save()


def delete_all_products(apps, schema_editor):
    BerthProduct = apps.get_model("payments", "BerthProduct")
    BerthProduct.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ("payments", "0017_add_order_customer_fields"),
        ("resources", "0024_add_price_tiers"),
    ]

    operations = [
        # Cleanup BerthProducts before running the new changes
        migrations.RunPython(
            assign_price_to_order, reverse_code=migrations.RunPython.noop
        ),
        migrations.RunPython(
            delete_all_products, reverse_code=migrations.RunPython.noop
        ),
        # Actual changes
        migrations.RemoveConstraint(
            model_name="berthproduct",
            name="unique_product_for_harbor_pricegroup",
        ),
        migrations.AddField(
            model_name="berthproduct",
            name="max_width",
            field=models.DecimalField(
                decimal_places=2,
                max_digits=5,
                verbose_name="maximum width",
                default=0,
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="berthproduct",
            name="min_width",
            field=models.DecimalField(
                decimal_places=2,
                max_digits=5,
                verbose_name="minimum width",
                default=0,
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="berthproduct",
            name="tier_1_price",
            field=models.DecimalField(
                decimal_places=2,
                max_digits=10,
                validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                verbose_name="tier 1 price",
                default=0,
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="berthproduct",
            name="tier_2_price",
            field=models.DecimalField(
                decimal_places=2,
                max_digits=10,
                validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                verbose_name="tier 2 price",
                default=0,
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="berthproduct",
            name="tier_3_price",
            field=models.DecimalField(
                decimal_places=2,
                max_digits=10,
                validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                verbose_name="tier 3 price",
                default=0,
            ),
            preserve_default=False,
        ),
        migrations.AlterModelOptions(
            name="berthproduct",
            options={"ordering": ["min_width"]},
        ),
        migrations.RemoveField(
            model_name="berthproduct",
            name="harbor",
        ),
        migrations.RemoveField(
            model_name="berthproduct",
            name="price_group",
        ),
        migrations.RemoveField(
            model_name="berthproduct",
            name="price_value",
        ),
        migrations.AddConstraint(
            model_name="berthproduct",
            constraint=models.UniqueConstraint(
                fields=("min_width", "max_width"), name="unique_width_range"
            ),
        ),
        migrations.DeleteModel(
            name="BerthPriceGroup",
        ),
    ]
