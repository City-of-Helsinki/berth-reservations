name: Build & Review
on: [pull_request]

env:
  CONTAINER_REGISTRY: ghcr.io
  CONTAINER_REGISTRY_USER: ${{ secrets.GHCR_CONTAINER_REGISTRY_USER }}
  CONTAINER_REGISTRY_PASSWORD: ${{ secrets.GHCR_TOKEN }}
  CONTAINER_REGISTRY_REPO: ghcr.io/city-of-helsinki/${{ github.event.repository.name }}
  REPO_NAME: ${{ github.event.repository.name }}
  KUBECONFIG_RAW: ${{ secrets.KUBECONFIG_RAW }}
  BUILD_ARTIFACT_FOLDER: "build_artifacts"
  SERVICE_ARTIFACT_FOLDER: "service_artifacts"
  BASE_DOMAIN: ${{ secrets.BASE_DOMAIN_STAGING }}
  DATABASE_USER: user
  DATABASE_PASSWORD: testing-password
  APP_MIGRATE_COMMAND: /app/.prod/on_deploy.sh
  APP_INITIALIZE_COMMAND: /app/.prod/on_initialize.sh
  K8S_REQUEST_CPU: 100m
  K8S_REQUEST_RAM: 300Mi
  K8S_LIMIT_CPU: 1000m
  K8S_LIMIT_RAM: 400Mi

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    steps:
      - uses: actions/checkout@v2
      - name: Build
        uses: andersinno/kolga-build-action@v2

  review:
    runs-on: ubuntu-latest
    needs: build
    name: Review
    steps:
      - uses: actions/checkout@v2
      - uses: andersinno/kolga-setup-action@v2

      - name: Review-Services
        uses: andersinno/kolga-deploy-service-action@v2
        with:
          projects: BERTH_RESERVATIONS
        env:
          POSTGRES_IMAGE: "docker.io/andersinnovations/postgis:11-bitnami"

      - name: Deploy
        uses: andersinno/kolga-deploy-action@v2
        env:
          ENVIRONMENT_URL: https://${{ env.K8S_NAMESPACE }}.${{ env.BASE_DOMAIN }}
          K8S_SECRET_ALLOWED_HOSTS: "*"
          K8S_SECRET_DEBUG: 1
          K8S_SECRET_CREATE_SUPERUSER: 1
          K8S_SECRET_CHECK_MIGRATIONS: 1
          K8S_SECRET_SECRET_KEY: ${{ secrets.GH_TEST_DJANGO_SECRET_KEY }}
          K8S_SECRET_TOKEN_AUTH_AUTHSERVER_URL: "https://tunnistamo.test.kuva.hel.ninja/openid"
          K8S_SECRET_CORS_ORIGIN_ALLOW_ALL: 1
          K8S_SECRET_VENE_UI_RETURN_URL: "https://venepaikat.hel.ninja/"
          K8S_SECRET_VENE_PAYMENTS_BAMBORA_API_URL: "https://real-bambora-api-url/api"
          K8S_SECRET_VENE_PAYMENTS_BAMBORA_API_KEY: "dummy-key"
          K8S_SECRET_VENE_PAYMENTS_BAMBORA_API_SECRET: "dummy-secret"
          K8S_SECRET_VENE_PAYMENTS_BAMBORA_PAYMENT_METHODS: "dummy-bank"
          K8S_SECRET_PROFILE_API_URL: "https://profiili-api.test.kuva.hel.ninja/graphql/"
          K8S_SECRET_VISMASIGN_API_URL: ${{ secrets.GH_TEST_VISMASIGN_API_URL }}
          K8S_SECRET_VISMASIGN_CLIENT_IDENTIFIER: ${{ secrets.GH_TEST_VISMASIGN_CLIENT_IDENTIFIER }}
          K8S_SECRET_VISMASIGN_SECRET: ${{ secrets.GH_TEST_VISMASIGN_SECRET }}
          K8S_SECRET_VISMASIGN_TEST_SSN: ${{ secrets.GH_TEST_VISMASIGN_TEST_SSN }}
          K8S_SECRET_NOTIFICATION_SERVICE_API_URL: "http://fake-notification-api.example.com/v1"
          K8S_SECRET_NOTIFICATION_SERVICE_TOKEN: "dummy-notification-token"
          K8S_SECRET_NOTIFICATION_SERVICE_SENDER_NAME: "Hel.fi"
          K8S_SECRET_ORDER_EXPIRATION_CRONJOB_ENABLED: "true"
          K8S_SECRET_OFFER_EXPIRATION_CRONJOB_ENABLED: "true"

      - name: Deploy Order Expiration Cronjob
        uses: City-of-Helsinki/setup-cronjob-action@main
        with:
          image_repository: ghcr.io/city-of-helsinki/${{ github.event.repository.name }}
          image_tag:  ${{ github.sha }}
          kubeconfig_raw: ${{ env.KUBECONFIG_RAW}}
          target_namespace: ${{ env.K8S_NAMESPACE }}
          single_run: true
          secret_name: "-secret"
          command: "{/bin/sh}"
          args: "{-c,cd /app && /usr/bin/timeout --kill-after=20m 19m python manage.py expire_too_old_unpaid_orders 2>&1}"

      - name: Deploy Order Expiration Cronjob
        uses: City-of-Helsinki/setup-cronjob-action@main
        with:
          image_repository: ghcr.io/city-of-helsinki/${{ github.event.repository.name }}
          image_tag:  ${{ github.sha }}
          kubeconfig_raw: ${{ env.KUBECONFIG_RAW}}
          target_namespace: ${{ env.K8S_NAMESPACE }}
          single_run: true
          secret_name: "-secret"
          command: "{/bin/sh}"
          args: "{-c,cd /app && /usr/bin/timeout --kill-after=20m 19m python manage.py expire_too_old_offers 2>&1}"
