name: Continuous integration

on:
  push:
    branches: [master]
  pull_request:


env:
  DEBUG: 1
  ELASTIC_APM_DISABLE_SEND: 1
  NOTIFICATIONS_ENABLED: 1
  ORDER_EXPIRATION_CRONJOB_ENABLED: 1
  PROFILE_API_URL: http://fake-profile-api.com
  TIER: test
  VENE_PAYMENTS_BAMBORA_API_KEY: dummy-bambora-api-key
  VENE_PAYMENTS_BAMBORA_API_SECRET: dummy-bambora-secret
  VENE_PAYMENTS_BAMBORA_PAYMENT_METHODS: dummy-bank
  VENE_UI_RETURN_URL: http://fake-vene-ui.com
  VISMASIGN_API_URL: http://fake-vismasign-api.com
  VISMASIGN_CLIENT_IDENTIFIER: dummy-vismasign-client-identifier
  VISMASIGN_SECRET: dummy-vismasign-secret
  VISMASIGN_TEST_SSN: dummy-vismasign-test-ssn
  NOTIFICATION_SERVICE_API_URL: http://fake-notification-api.example.com/v1
  NOTIFICATION_SERVICE_TOKEN: dummy-notification-token
  NOTIFICATION_SERVICE_SENDER_NAME: Hel.fi

jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest
    container: python:3.8-buster

    services:
      postgres:
        image: postgis/postgis:11-2.5
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_USER: berth_reservations
          POSTGRES_PASSWORD: berth_reservations
          POSTGRES_DB: berth_reservations

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Cache pip packages
        uses: actions/cache@v2
        env:
          cache-name: cache-pip-modules
        with:
          path: ~/.pip-cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/requirements.txt') }}-${{ hashFiles('**/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: |
          pip install -r requirements.txt -r requirements-dev.txt codecov && \
          apt-get update && apt-get install -y binutils libproj-dev gdal-bin

      - name: Run tests
        run: pytest -ra -vv --doctest-modules --cov=.
        env:
          DATABASE_URL: postgis://berth_reservations:berth_reservations@postgres:5432/berth_reservations

      - name: Coverage
        run: codecov

  coding-style:
    name: Coding style
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Cache pip packages
        uses: actions/cache@v2
        env:
          cache-name: cache-pip-modules
        with:
          path: ~/.pip-cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/requirements.txt') }}-${{ hashFiles('**/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: pip install -r requirements.txt -r requirements-dev.txt

      - name: Formatting
        run: black --check .

      - name: Linting
        run: flake8

      - name: Import sorting
        run: isort . -c
